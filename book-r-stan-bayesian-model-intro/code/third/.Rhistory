standata_brms
simple_lm_brms_stan <- stan(
file = 'brms-stan-code.stan',
data = standata_brms,
seed = 1
)
stanplot(simple_lm_brms,
type = 'intervals',
pars = '^b',
prob = 0.8,
prob_outer = 0.95)
simple_lm_brms
prior_summary(simple_lm_brms)
stanplot(simple_lm_brms,
type = 'intervals',
pars = c('Intercept', 'sigma'),
prob = 0.8,
prob_outer = 0.95)
prior_summary(simple_lm_brms)
stanplot(simple_lm_brms,
type = 'intervals',
pars = c('Intercept', 'temperature'),
prob = 0.8,
prob_outer = 0.95)
stanplot(simple_lm_brms,
type = 'area',
pars = c('Intercept', 'temperature'),
prob = 0.8,
prob_outer = 0.95)
stanplot(simple_lm_brms,
type = 'area',
pars = c('Intercept', 'temperature'),
prob = 0.8,
prob_outer = 0.95)
stanplot(simple_lm_brms,
type = 'plot',
pars = c('Intercept', 'temperature'),
prob = 0.8,
prob_outer = 0.95)
stanplot(simple_lm_brms,
type = 'plot',
pars = c('Intercept', 'temperature')
)
stanplot(simple_lm_brms,
type = 'plot',
pars = c('Intercept', 'temperature')
)
stanplot(simple_lm_brms,
type = 'areas',
pars = c('Intercept', 'temperature')
)
stanplot(simple_lm_brms,
type = 'hist',
pars = c('Intercept', 'temperature')
)
stanplot(simple_lm_brms,
type = 'combo',
pars = c('Intercept', 'temperature')
)
stanplot(simple_lm_brms,
type = 'nuts_acceptance',
pars = c('Intercept', 'temperature')
)
stanplot(simple_lm_brms,
type = 'parcoord_data',
pars = c('Intercept', 'temperature')
)
new_data <- 11:30
new_data <- data.frame(temperature=20)
new_data
fitted(simple_lm_brms, new_data)
mcmc_sample <- as.mcmc(simple_lm_brms, combine_chains = TRUE)
head(mcmc_sample)
# 推定されたパラメタ別に保存しておく
mcmc_b_Intercept   <- mcmc_sample[,"b_Intercept"]
mcmc_b_temperature <- mcmc_sample[,"b_temperature"]
mcmc_sigma         <- mcmc_sample[,"sigma"]
mcmc_b_Intercept
saigen_fitted <- mcmc_b_Intercept + 20 * mcmc_b_temperature
saigen_fi
saigen_fitted
mean(saigen_fitted)
quantile(saigen_fitted, probs = c(0.025, 0.975))
fitted(simple_lm_brms, new_data)
eff <- marginal_effects(simple_lm_brms)
plot(eff)
plot(eff, points=TRUE)
set.seed(1)
eff_pre <- marginal_effects(simple_lm_brms, method='predict')
plot(eff_pre, points=TRUE)
library(rstan)
library(brms)
# 計算の高速化
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
source('fix_mac.R')
fix_Mac
# 分析対象のデータ
sales_weather <- read.csv("3-6-1-beer-sales-3.csv")
head(sales_weather, 3)
# 分析対象のデータ
sales_weather <- read.csv("data/3-6-1-beer-sales-3.csv")
head(sales_weather, 3)
sales_weather
ggplot(data = sales_weather, mapping = aes(x=weather, y= sales)) +
geom_violin()
ggplot(data = sales_weather, mapping = aes(x=weather, y= sales)) +
geom_violin() + geom_point(aes(color=weather))
anova_brms <- brm(
formula = sales ~ weather,
family = gaussian(link='density'),
data = sales_weather,
seed = 1,
prior = c(set_prior("", class='Intercept'),
set_prior("", class='sigma'))
)
anova_brms <- brm(
formula = sales ~ weather,
family = gaussian(link='identity'),
data = sales_weather,
seed = 1,
prior = c(set_prior("", class='Intercept'),
set_prior("", class='sigma'))
)
anova_brms
eff <- marginal_effects(anova_brms)
plot(eff, points=FALSE)
eff <- marginal_effects(anova_brms, method='predict')
plot(eff, points=FALSE)
design_mat <- model.matrix(formula(sales ~ weather), sales_weather)
design_mat
data_list <- list(
N = nrow(sales_weather),
K = 3,
Y = sales_weather$sales,
X = design_mat
)
anoba_stan_brms <- stan(
file = 'lm-design-matrix.stan',
data -= data_list,
seed = 1
)
anoba_stan_brms <- stan(
file = 'lm-design-matrix.stan',
data = data_list,
seed = 1
)
anoba_stan_brms
plot(anoba_stan_brms)
# パッケージの読み込み
library(rstan)
library(brms)
# 計算の高速化
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
source('fix_mac.R')
fix_Mac
# 分析対象のデータ
sales_climate <- read.csv("3-7-1-beer-sales-4.csv")
head(sales_climate, 3)
# 分析対象のデータ
sales_climate <- read.csv("data/3-7-1-beer-sales-4.csv")
head(sales_climate, 3)
sales_climate
ggplot(data=sales_climate, mapping=aes(x=temperature, y=sales)) +
geom_point(aes(color=weather))
lm_brms <- brm(
formula = sales ~ weather + temperature,
data = sales_climate,
prior = c(set_prior('', 'Intercept'),
set_prior('', 'sigma'))
seed = 1
)
lm_brms <- brm(
formula = sales ~ weather + temperature,
data = sales_climate,
prior = c(set_prior('', 'Intercept'),
set_prior('', 'sigma')),
seed = 1
)
source('~/study/book-r-stan-bayesian-model-intro/code/third/ch3_7.R', echo=TRUE)
eff <- marginal_effects(lm_brms, effects = 'temperature:weather')
plot(eff, points=TRUE)
eff <- marginal_effects(lm_brms, effects = 'weather')
plot(eff, points=TRUE)
eff <- marginal_effects(lm_brms, effects = 'temperature')
eff <- marginal_effects(lm_brms, effects = 'temperature')
plot(eff, points=TRUE)
eff <- marginal_effects(lm_brms, effects = 'temperature:weather')
plot(eff, points=TRUE)
# パッケージの読み込み
library(rstan)
library(brms)
# 計算の高速化
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
source('fix_mac.R')
fix_Mac
# 分析対象のデータ
fish_num_climate <- read.csv("data/3-8-1-fish-num-1.csv")
head(fish_num_climate, 3)
ggplot(data=fish_num_climate, mapping=aes(x=temperature, y=fish_num)) +
geom_point(color=weather)
fish_num_climate
ggplot(data=fish_num_climate, mapping=aes(x=temperature, y=fish_num)) +
geom_point(aes(color=weather))
glm_poisson_grms <- brm(
formula = fish_num ~ weather + temperature,
family = poisson(),
data = fish_num_climate,
prior = c(set_prior('', 'Intercept'),
set_prior('', 'sigma')),
seed = 1
)
glm_poisson_grms <- brm(
formula = fish_num ~ weather + temperature,
family = poisson(),
data = fish_num_climate,
prior = c(set_prior('', 'Intercept')),
seed = 1
)
glm_poisson_grms
eff <- marginal_effects(glm_poisson_grms, effects=c('weather:temperature))
eff <- marginal_effects(glm_poisson_grms, effects=c('weather:temperature))
eff <- marginal_effects(glm_poisson_grms, effects='weather:temperature')
plot(eff, points=TRUE)
eff <- marginal_effects(glm_poisson_grms, effects='temperature:weather')
plot(eff, points=TRUE)
set.seed(1)
eff_pre <- marginal_effects(glm_poisson_grms,
method='predict',
effects='temperature:weather',
probs=c(0.005, 0.995))
plot(eff_pre, points=TRUE)
fish_num_climate
rstan:::rstudio_stanc("glm-pois-1.stan")
rstan:::rstudio_stanc("glm-pois-design.stan")
formula_pois <- formula(fish_num ~ weather + temperature)
design_mat <- model.matrix(formula_pois, fish_num_climate)
design_mat
data_list = list(
N = nrow(fish_num_climate),
K = 3,
Y = fish_num_climate$fish_num,
X = design_mat
)
pois_stan <- stan(
file = 'glm-pois-design.stan',
data = data_list,
seed = 1
)
pois_stan
mcmc_combo(pois_stan)
data_list <- list(
N = nrow(fish_num_climate),
fish_num = fish_num_climate$fish_num,
temperature = fish_num_climate$temperature,
sunny = fish_num_climate$weather
)
data_list
pois_stan_2 <- stan(
file = 'glm-pois-1.stan',
data = data_list,
seed = 1
)
install.packages("makedummies")
library(makedummies)
d_data <- makedummies(fish_num_climate$weather, basal_level = TRUE)
d_data
d_data <- makedummies(fish_num_climate$weather)
library(makedummies)
d_data <- makedummies(fish_num_climate$weather)
d_data
d_data <- makedummies(fish_num_climate)
d_data <- makedummies(fish_num_climate)
d_data
fish_num_climate
fish_num_climate<- makedummies(fish_num_climate)
data_list <- list(
N = nrow(fish_num_climate),
fish_num = fish_num_climate$fish_num,
temperature = fish_num_climate$temperature,
sunny = fish_num_climate$weather
)
data_list
pois_stan_2 <- stan(
file = 'glm-pois-1.stan',
data = data_list,
seed = 1
)
pois_stan_2
# パッケージの読み込み
library(rstan)
library(brms)
library(makedummies)
# 計算の高速化
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
source('fix_mac.R')
fix_Mac
germination_dat <- read.csv("data/3-9-1-germination.csv")
germination_dat
summary(germination_dat)
geom_point(
ggplot(data=germination_dat, mapping=aes(x=nutrition, y=germination)) +
geom_point()
ggplot(data=germination_dat, mapping=aes(x=nutrition, y=germination)) +
geom_point()
ggplot(data=germination_dat, mapping=aes(x=nutrition, y=germination)) +
geom_point()
ggplot(data=germination_dat, mapping=aes(x=nutrition, y=germination)) +
geom_point(color=aes(solar))
ggplot(data=germination_dat, mapping=aes(x=nutrition, y=germination)) +
geom_point(color=aes(solar))
ggplot(data=germination_dat, mapping=aes(x=nutrition, y=germination)) +
geom_point(aes(color=solar))
glm_binom_brms <- brm(
formula = germination ~ size + solar + nutrition,
family = binomial(link=),
data = germination_dat,
prior = c(set_prior('', class='Intercept')),
seed = 1
)
glm_binom_brms
glm_binom_brms <- brm(
formula = germination ~ size + solar + nutrition,
family = binomial(),
data = germination_dat,
prior = c(set_prior('', class='Intercept')),
seed = 1
)
plot(glm_binom_brms)
eff <- marginal_effects(glm_binom_brms, effects='nutrition:solar')
plot(eff, points=TRUE)
plot(glm_binom_brms)
glm_binom_brms
glm_binom_brms <- brm(
germination | trials(size) ~ solar + nutrition,
family = binomial(),
data = germination_dat,
prior = c(set_prior('', class='Intercept')),
seed = 1
)
glm_binom_brms
plot(glm_binom_brms)
eff <- marginal_effects(glm_binom_brms, effects='nutrition:solar')
plot(eff, points=TRUE)
eff <- marginal_effects(glm_binom_brms, effects='nutrition:solar', method='predict')
plot(eff, points=TRUE)
eff <- marginal_effects(glm_binom_brms, effects='nutrition:solar')
plot(eff, points=TRUE)
rstan:::rstudio_stanc("glm-binom-1.stan")
library(makedummies)
makedummies(germination_dat)
germination_dummy <- makedummies(germination_dat)
data_list <- list(
N = nrow(germination_dummy),
germination = germination_dummy$germination,
binom_size = germination_dummy$size,
solar = germination_dummy$solar,
nutrition = germination_dummy$nutrition
)
glm_binom_stan <- stan(
file = 'glm-binom-1.stan',
data = data_list,
seed = 1
)
plot(glm_binom_stan)
mcmc_combo(glm_binom_stan)
mcmc_combo(glm_binom_stan)
interaction_1 <- read.csv("data/3-10-1-interaction-1.csv")
head(interaction_1, n = 3)
interaction_1
summary(interaction_1)
ggplot(data = interaction_1, mapping=aes(x=publicity, y=sales)) +
geom_point(aes(color=bargen))
interaction_brms_1 <- brm(
formula = sales ~ publicity + bargen + publicity:bargen,
family = gaussian(),
data = interaction_1,
prior = c(set_prior('', label='Intercept'),
set_prior('', label='sigma'))
seed = 1
)
interaction_brms_1 <- brm(
formula = sales ~ publicity + bargen + publicity:bargen,
family = gaussian(),
data = interaction_1,
prior = c(set_prior('', label='Intercept'),
set_prior('', label='sigma')),
seed = 1
)
interaction_brms_1 <- brm(
formula = sales ~ publicity + bargen + publicity:bargen,
family = gaussian(),
data = interaction_1,
prior = c(set_prior('', class='Intercept'),
set_prior('', class='sigma')),
seed = 1
)
interaction_brms_1
mcmc_combo(interaction_1)
plot(interaction_1)
plot(interaction_brms_1)
eff <- marginal_effects(interaction_brms_1, effects='publicity:bargen')
plot(eff, points=TRUE)
interaction_2 <- read.csv("data/3-10-2-interaction-2.csv")
head(interaction_2, n = 3)
ggplot(data = interaction_2, mapping=aes(x=temperature, y=sales)) +
geom_point(aes(color=publicity))
interaction_brms_2 <- brm(
formula = sales ~ publicity*temperature,
family = gaussian(link='identity'),
data = interaction_2,
prior = c(set_prior('', class='Intercept'),
set_prior('', class='sigma')),
seed = 1
)
plot(interaction_brms_2)
eff <- marginal_effects(interaction_brms_2, effects='temperature:publicity')
plot(eff, points=TRUE)
interaction_3 <- read.csv("data/3-10-3-interaction-3.csv")
head(interaction_3, n = 3)
ggplot(data = interaction_2, mapping=aes(x=product, y=sales)) +
geom_point(aes(color=clerk))
ggplot(data = interaction_3, mapping=aes(x=product, y=sales)) +
geom_point(aes(color=clerk))
ggplot(data = interaction_3, mapping=aes(x=product, y=sales)) +
geom_point(aes(color=factor(clerk)))
interaction_brms_3 <- brm(
formula = sales ~ product*clerk,
family = gaussian(link='identity'),
data = interaction_3,
prior = c(set_prior('', class='Intercept'),
set_prior('', class='sigma')),
seed = 1
)
plot(interaction_brms_3)
eff <- marginal_effects(interaction_brms_3, effects='product:clerk')
plot(eff, points=TRUE)
# 1つのグラフに回帰直線をまとめて描画する
int_conditions <- list(
clerk = setNames(1:9, paste("clerk=", 1:9, sep=""))
)
int_conditions
eff_3 <- marginal_effects(interaction_brms_3,
effects = "product:clerk",
int_conditions = int_conditions)
plot(eff_3, points = TRUE)
conditions <- data.frame(clerk = 1:9)
conditions
eff_4 <- marginal_effects(interaction_brms_3,
effects = "product",
conditions = conditions)
plot(eff_4, points = FALSE)
# パッケージの読み込み
library(rstan)
library(brms)
library(makedummies)
# 計算の高速化
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
source('fix_mac.R')
fix_Mac
library(makedummies)
library(rstan)
library(bayesplot)
library(brms)
library(makedummies)
# 計算の高速化
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
source('fix_mac.R')
fix_Mac
fish_num_climate_2 <- read.csv("4-1-1-fish-num-2.csv")
fish_num_climate_2 <- read.csv("data/4-1-1-fish-num-2.csv")
fish_num_climate_2
fish_num_climate_2$id <- as.factor(fish_num_climate_2$id)
fish_num_climate_2
fish_num_climate_2$id <- as.factor(fish_num_climate_2$id)
glm_pois_brms <- brm(
formula = fish_num ~ weather + temperature,
family = poisson(),
data = fish_num_climate_2,
prior = c(set_prior('', 'Intercept')),
seed = 1
)
plot(glm_pois_brms)
eff <- marginal_effects(glm_pois_brms, effects='temperature:"weather')
plot(eff, points=TRUE)
eff <- marginal_effects(glm_pois_brms, effects='temperature:weather')
plot(eff, points=TRUE)
eff <- marginal_effects(glm_pois_brms,
method='predict',
effects='temperature:weather',
probs = c(0.005, 0.995))
plot(eff, points=TRUE)
rstan:::rstudio_stanc("glmm-pois.stan")
fish_num_climate_2_dum <- makedummies(fish_num_climate_2)
fish_num_climate_2_dum
fish_num_climate_2_dum$weather
data_list <- list(
N = nrow(fish_num_climate_2),
fish_num = fish_num_climate_2$fish_num,
sunny = fish_num_climate_2_dum$weather,
temp = fish_num_climate_2$temperature
)
glmm_pois_stan <- stan(
file = 'glmm-pois.stan',
data = data_list,
seed = 1
)
